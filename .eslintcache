[{"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js":"1","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js":"2","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js":"3","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js":"4","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js":"5","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js":"6","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js":"7","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js":"8"},{"size":843,"mtime":1607102735465,"results":"9","hashOfConfig":"10"},{"size":1384,"mtime":1606844661006,"results":"11","hashOfConfig":"10"},{"size":146,"mtime":1606833778000,"results":"12","hashOfConfig":"10"},{"size":1562,"mtime":1607103822307,"results":"13","hashOfConfig":"10"},{"size":661,"mtime":1607103966130,"results":"14","hashOfConfig":"10"},{"size":1788,"mtime":1607102862846,"results":"15","hashOfConfig":"10"},{"size":1727,"mtime":1607027019661,"results":"16","hashOfConfig":"10"},{"size":564,"mtime":1607104359689,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1c76izv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js",["40","41","42","43"],"import React from 'react'\nimport './App.css';\nimport Search from './Components/search'\nimport Playlisten from \"./Playlisten\"\nimport Show from './show'\n\nfunction App() {\n const searchNav=()=>window.location.hash=\"search\";\n const playlistNav=()=>window.location.hash=\"playlist\";\n\n return (\n   <div className=\"App\">\n     <nav>\n    <div className=\"nav-wrapper\">\n      <a href=\"#\" className=\"brand-logo\">Atunes</a>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li><a href=\"#\">Homepage</a></li>\n        <li><a href=\"#search\">Search</a></li>\n        <li><a href=\"#playlist\">Playlist</a></li>\n      </ul>\n    </div>\n  </nav>\n      <div>\n       <Show hash=\"#search\"><Search /> </Show>\n      </div>\n       <div>\n       <Show hash=\"#playlist\"><Playlisten /> </Show>\n       </div>\n       \n   </div>\n );\n}\n \nexport default App;","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js",[],["44","45"],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js",["46","47"],"const SongSearcher = ({searchSong, theSongs})=>{\r\n \r\n    let query = \" \";\r\n     \r\n     \r\n    return (<div>\r\n     \r\n      \r\n       <input className = \"input\" placeholder = \"Song or Artist\" onChange={event=> query = event.target.value}></input>\r\n       <button className = \"waves-effect waves-light btn-small\" onClick = {()=> searchSong(query)}> Search</button>\r\n\r\n        <br></br>\r\n\r\n       {theSongs.results.map(song =>\r\n       <div class=\"pics\">\r\n       <div class=\"card medium\">\r\n       <div class=\"card-image waves-effect waves-block waves-light\">\r\n       <img class=\"activator\" src={song.artworkUrl60} /> \r\n       </div>\r\n       <div class=\"card-content\">\r\n           <span class=\"card-title activator grey-text text-darken-4\">{song.trackCensoredName}</span>\r\n           <p>{song.artistName}</p>\r\n       </div>\r\n       <div class=\"card-reveal\">\r\n           <span class=\"card-title grey-text text-darken-4\">Information<i class=\"material-icons right\">close</i></span>\r\n           <p><b>Price:</b>{song.collectionPrice}$</p>\r\n           <p><b>Genre:</b>{song.primaryGenreName}</p>\r\n           <p><b>Country:</b>{song.country}</p>\r\n           <p><b>Release date:</b>{song.releaseDate}</p>\r\n       <p><b>Details: </b> <span>{song.trackCensoredName} is a song by {song.artistName} from the album {song.collectionName}. It was released {song.releaseDate}.</span></p>\r\n           <a class=\"waves-effect waves-light btn-small\">Add to playlist</a>\r\n   </div>\r\n </div>\r\n  </div>\r\n       )\r\n       }  \r\n     \r\n    </div>)}\r\n     \r\n     \r\n    export default SongSearcher","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js",["48"],"import React, { useState } from 'react'\nimport SongSearcher from '../Views/searchView'\n \nfunction Search (){\n \n    const [song, setSong] = useState(\"ozuna\");\n    const [result, setResult] = useState ({resultCount: 0, results: []});\n \n   //  const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=jack+johnson';\n \n    const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=' + song;\n \n    React.useEffect(()=>fetch(url).then(response => response.json()).then(setResult),[song]);\n \n    console.log(result)\n   \n   return <SongSearcher searchSong={setSong} theSongs={result}/>\n}\n \nexport default Search\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js",["49"],"\r\nimport React from \"react\"\r\nimport \"./App.css\"\r\n\r\n class Playlist extends React.Component {\r\n\r\n    state = {\r\n        songs : 0,\r\n        idNamn : this.props.idNamn,\r\n        allSongs : [],\r\n     \r\n    }\r\n\r\n  btnHandler = () => console.log(\"CLICKED\")\r\n\r\n  btnHandlerSong = () => {\r\n  \r\n    this.setState({songs : this.state.songs+1})\r\n    var inputVal = document.getElementById(this.state.idNamn).value;\r\n    console.log(inputVal)\r\n    let t = this.state.allSongs\r\n\r\n    if(!t.includes(inputVal)){\r\n    t.push(inputVal)\r\n    }\r\n \r\n    else{\r\n        alert(\"Cant add!  \" + inputVal + \" allready in playlist\")\r\n    }\r\n    this.setState({allSongs : t})\r\n  }\r\n\r\n  test = (id) => {\r\n        console.log(id)\r\n  }\r\n\r\n  render(){\r\n    \r\n    let str = \"https://www.youtube.com/results?search_query=\"\r\n  let v = this.state.allSongs.map((element) => <div className = \"boxsquaresmall\">\r\n  \r\n  <span className = \"spanSize\"><small><a href = {str + element} target=\"_blank\">{element}</a> </small>\r\n  </span></div>\r\n\r\n  )\r\n  return (\r\n    <div className = \"boxsquare\">\r\n      <h2>{this.props.text}</h2>\r\n      <input type = \"button\" className = \"myButton\"  value = \"ADD SONG\" onClick = {() => this.btnHandlerSong()} />\r\n      <div className  = \"divider\"/>\r\n\r\n      <input type=\"text\" id={this.state.idNamn} placeholder=\"Enter song name\"/>\r\n            {v}\r\n            <input type = \"button\" value = \"DELETE PLAYLIST\" id = {this.state.songs} className = \"myButton2\" onClick = {() => this.props.onDelete(this.props.id)}/>\r\n            <br></br>\r\n            <h4>total songs: {this.state.allSongs.length}</h4>\r\n            <h4>total playtime: 0</h4>\r\n            <h4>total cost : 0</h4>\r\n    </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js",["50"],"import React from 'react';\r\nimport DefaultRoute from './defaultRoute'\r\nfunction Show({hash, children}){  \r\n    const [route, setRoute]= React.useState(window.location.hash);\r\n    <DefaultRoute/> \r\n    React.useEffect(()=>{ \r\n      window.addEventListener(\"hashchange\", \r\n                 setRoute) \r\n             return ()=> window.removeEventListener(\"hashchange\", \r\n              setRoute);\r\n                },[]);\r\n                             \r\n          \r\n               \r\n\r\n\r\n   return hash===window.location.hash?children: false;\r\n }\r\n\r\n export default Show",{"ruleId":"51","severity":1,"message":"52","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":17},{"ruleId":"51","severity":1,"message":"55","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":15,"column":7,"nodeType":"58","endLine":15,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":17,"column":13,"nodeType":"58","endLine":17,"endColumn":25},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":18,"column":8,"nodeType":"58","endLine":18,"endColumn":57},{"ruleId":"56","severity":1,"message":"65","line":31,"column":12,"nodeType":"58","endLine":31,"endColumn":58},{"ruleId":"66","severity":1,"message":"67","line":13,"column":86,"nodeType":"68","endLine":13,"endColumn":92,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":42,"column":65,"nodeType":"72","endLine":42,"endColumn":80},{"ruleId":"51","severity":1,"message":"73","line":4,"column":12,"nodeType":"53","messageId":"54","endLine":4,"endColumn":17},"no-unused-vars","'searchNav' is assigned a value but never used.","Identifier","unusedVar","'playlistNav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["76"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'route' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [song, url]",{"range":"79","text":"80"},[531,537],"[song, url]"]