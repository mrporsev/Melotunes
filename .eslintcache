[{"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js":"1","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js":"2","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js":"3","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js":"4","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js":"5","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js":"6","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js":"7","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js":"8","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\defaultRoute.js":"9","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\atunesModel.js":"10"},{"size":935,"mtime":1607527790758,"results":"11","hashOfConfig":"12"},{"size":1384,"mtime":1606844661006,"results":"13","hashOfConfig":"12"},{"size":146,"mtime":1606833778000,"results":"14","hashOfConfig":"12"},{"size":1815,"mtime":1607527824449,"results":"15","hashOfConfig":"12"},{"size":820,"mtime":1607529068980,"results":"16","hashOfConfig":"12"},{"size":1788,"mtime":1607519708806,"results":"17","hashOfConfig":"12"},{"size":1727,"mtime":1607027019661,"results":"18","hashOfConfig":"12"},{"size":564,"mtime":1607104359689,"results":"19","hashOfConfig":"12"},{"size":215,"mtime":1607027716184,"results":"20","hashOfConfig":"12"},{"size":499,"mtime":1607529098519,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1c76izv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js",["49","50","51","52"],"import React from 'react'\nimport './App.css';\nimport Search from './Components/search'\nimport Playlisten from \"./Playlisten\"\nimport Show from './show'\nimport atunesModel from './atunesModel'\n\nfunction App() {\n const searchNav=()=>window.location.hash=\"search\";\n const playlistNav=()=>window.location.hash=\"playlist\";\nconst model = new atunesModel()\n\n return (\n   <div className=\"App\">\n     <nav>\n    <div className=\"nav-wrapper\">\n      <a href=\"#\" className=\"brand-logo\">Atunes</a>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li><a href=\"#\">Homepage</a></li>\n        <li><a href=\"#search\">Search</a></li>\n        <li><a href=\"#playlist\">Playlist</a></li>\n      </ul>\n    </div>\n  </nav>\n      <div>\n       <Show hash=\"#search\"><Search atunesModel= {model}/> </Show>\n      </div>\n       <div>\n       <Show hash=\"#playlist\"><Playlisten /> </Show>\n       </div>\n       \n   </div>\n );\n}\n \nexport default App;","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js",[],["53","54"],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js",["55"],"\r\nconst SongSearcher = ({searchSong, theSongs, addSong})=>{\r\n        \r\n    let query = \" \";\r\n    let x = \"\"\r\n    if(theSongs.resultCount === 0) {\r\n        x = alert(\"Result not found, please try again.\") \r\n        theSongs.resultCount = 1 \r\n    }\r\n    \r\n     \r\n    return (<div>\r\n     \r\n      \r\n       <input className = \"input\" placeholder = \"Song or Artist\" onChange={event=> query = event.target.value}></input>\r\n       <button className = \"waves-effect waves-light btn-small\" onClick = {()=> searchSong(query)}> Search</button>\r\n           \r\n        <br></br>\r\n       \r\n       {theSongs.results.map(song =>\r\n       <div class=\"pics\">\r\n       <div class=\"card medium\">\r\n       <div class=\"card-image waves-effect waves-block waves-light\">\r\n       <img class=\"activator\" src={song.artworkUrl100} /> \r\n       </div>\r\n       <div class=\"card-content\">\r\n           <span class=\"card-title activator grey-text text-darken-4\">{song.trackCensoredName}</span>\r\n           <p>{song.artistName}</p>\r\n       </div>\r\n       <div class=\"card-reveal\">\r\n           <span class=\"card-title grey-text text-darken-4\">Information<i class=\"material-icons right\">close</i></span>\r\n           <p><b>Price:</b>{song.trackPrice}$</p>\r\n           <p><b>Genre:</b>{song.primaryGenreName}</p>\r\n           <p><b>Country:</b>{song.country}</p>\r\n           <p><b>Release date:</b>{song.releaseDate}</p>\r\n       <p><b>Details: </b> <span>{song.trackCensoredName} is a song by {song.artistName} from the album {song.collectionName}. It was released {song.releaseDate}.</span></p>\r\n       <button class=\"waves-effect waves-light btn-small\" style={{fontSize: \"10px\"}} onClick={()=>addSong(song)}>Add to playlist</button>\r\n   </div>\r\n </div>\r\n \r\n  </div>\r\n       )\r\n       }  \r\n     {x}\r\n    </div>)}\r\n     \r\n     \r\n    export default SongSearcher","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js",["56"],"import React, { useState } from 'react'\nimport SongSearcher from '../Views/searchView'\n \nfunction Search ({atunesModel}){\n    \n    \n\n    const [song, setSong] = useState(\"drake\");\n    const [result, setResult] = useState ({resultCount: 1, results: []});\n \n   //  const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=jack+johnson';\n \n    const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=' + song;\n \n    React.useEffect(()=>fetch(url).then(response => response.json()).then(setResult),[song]);\n    React.useEffect(()=> console.log(atunesModel.playlist),[atunesModel.playlist])\n\n    console.log(result)\n   \n   return <SongSearcher searchSong={setSong} theSongs={result} addSong={(song)=>atunesModel.addSongToPlaylist(song)} />\n}\n \nexport default Search\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js",["57"],"\r\nimport React from \"react\"\r\nimport \"./App.css\"\r\n\r\n class Playlist extends React.Component {\r\n\r\n    state = {\r\n        songs : 0,\r\n        idNamn : this.props.idNamn,\r\n        allSongs : [],\r\n     \r\n    }\r\n\r\n  btnHandler = () => console.log(\"CLICKED\")\r\n\r\n  btnHandlerSong = () => {\r\n  \r\n    this.setState({songs : this.state.songs+1})\r\n    var inputVal = document.getElementById(this.state.idNamn).value;\r\n    console.log(inputVal)\r\n    let t = this.state.allSongs\r\n\r\n    if(!t.includes(inputVal)){\r\n    t.push(inputVal)\r\n    }\r\n \r\n    else{\r\n        alert(\"Cant add!  \" + inputVal + \" allready in playlist\")\r\n    }\r\n    this.setState({allSongs : t})\r\n  }\r\n\r\n  test = (id) => {\r\n        console.log(id)\r\n  }\r\n\r\n  render(){\r\n    \r\n    let str = \"https://www.youtube.com/results?search_query=\"\r\n  let v = this.state.allSongs.map((element) => <div className = \"boxsquaresmall\">\r\n  \r\n  <span className = \"spanSize\"><small><a href = {str + element} target=\"_blank\">{element}</a> </small>\r\n  </span></div>\r\n\r\n  )\r\n  return (\r\n    <div className = \"boxsquare\">\r\n      <h2>{this.props.text}</h2>\r\n      <input type = \"button\" className = \"myButton\"  value = \"ADD SONG\" onClick = {() => this.btnHandlerSong()} />\r\n      <div className  = \"divider\"/>\r\n\r\n      <input type=\"text\" id={this.state.idNamn} placeholder=\"Enter song name\"/>\r\n            {v}\r\n            <input type = \"button\" value = \"DELETE PLAYLIST\" id = {this.state.songs} className = \"myButton2\" onClick = {() => this.props.onDelete(this.props.id)}/>\r\n            <br></br>\r\n            <h4>total songs: {this.state.allSongs.length}</h4>\r\n            <h4>total playtime: 0</h4>\r\n            <h4>total cost : 0</h4>\r\n    </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js",["58"],"import React from 'react';\r\nimport DefaultRoute from './defaultRoute'\r\nfunction Show({hash, children}){  \r\n    const [route, setRoute]= React.useState(window.location.hash);\r\n    <DefaultRoute/> \r\n    React.useEffect(()=>{ \r\n      window.addEventListener(\"hashchange\", \r\n                 setRoute) \r\n             return ()=> window.removeEventListener(\"hashchange\", \r\n              setRoute);\r\n                },[]);\r\n                             \r\n          \r\n               \r\n\r\n\r\n   return hash===window.location.hash?children: false;\r\n }\r\n\r\n export default Show","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\defaultRoute.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\atunesModel.js",["59"],"import React from 'react'\r\n\r\nclass atunesModel {\r\n\r\n    constructor (playlist = [], songs = []){\r\n        \r\n        this.playlist = playlist;\r\n        this.songs = songs;\r\n    }\r\n\r\n    addSongToPlaylist (song){\r\n        console.log(atunesModel.song)\r\n        this.playlist=[...this.playlist, song]\r\n        console.log(atunesModel.addSongToPlaylist)\r\n        \r\n    }\r\n\r\n    // removeFromPlaylist (song){\r\n\r\n    //     [...this.playlist].fil\r\n    // }sdfsdfsf\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default atunesModel",{"ruleId":"60","severity":1,"message":"61","line":9,"column":8,"nodeType":"62","messageId":"63","endLine":9,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":10,"column":8,"nodeType":"62","messageId":"63","endLine":10,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":17,"column":7,"nodeType":"67","endLine":17,"endColumn":42},{"ruleId":"65","severity":1,"message":"66","line":19,"column":13,"nodeType":"67","endLine":19,"endColumn":25},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":8,"nodeType":"67","endLine":24,"endColumn":58},{"ruleId":"74","severity":1,"message":"75","line":15,"column":86,"nodeType":"76","endLine":15,"endColumn":92,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":42,"column":65,"nodeType":"80","endLine":42,"endColumn":80},{"ruleId":"60","severity":1,"message":"81","line":4,"column":12,"nodeType":"62","messageId":"63","endLine":4,"endColumn":17},{"ruleId":"60","severity":1,"message":"82","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},"no-unused-vars","'searchNav' is assigned a value but never used.","Identifier","unusedVar","'playlistNav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["85"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'route' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [song, url]",{"range":"88","text":"89"},[553,559],"[song, url]"]