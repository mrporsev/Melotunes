[{"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js":"1","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js":"2","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js":"3","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js":"4","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js":"5","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js":"6","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js":"7","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js":"8"},{"size":886,"mtime":1607032878728,"results":"9","hashOfConfig":"10"},{"size":1384,"mtime":1606844661006,"results":"11","hashOfConfig":"10"},{"size":146,"mtime":1606833778000,"results":"12","hashOfConfig":"10"},{"size":1273,"mtime":1607033013162,"results":"13","hashOfConfig":"10"},{"size":639,"mtime":1607026766023,"results":"14","hashOfConfig":"10"},{"size":1786,"mtime":1607027004078,"results":"15","hashOfConfig":"10"},{"size":1727,"mtime":1607027019661,"results":"16","hashOfConfig":"10"},{"size":564,"mtime":1607027829141,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c76izv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js",["38","39","40","41","42"],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js",["43","44"],"const SongSearcher = ({searchSong, theSongs})=>{\r\n \r\n    let query = \" \";\r\n     \r\n     \r\n    return (<div>\r\n     \r\n      \r\n       <input className = \"input\" placeholder = \"Song or Artist\" onChange={event=> query = event.target.value}></input>\r\n       <button className = \"btn\" onClick = {()=> searchSong(query)}> Search</button>\r\n\r\n        <br></br>\r\n\r\n       {theSongs.results.map(song =>\r\n       <div class=\"pics\">\r\n       <div class=\"card\">\r\n       <div class=\"card-image waves-effect waves-block waves-light\">\r\n       <img class=\"activator\" src={song.artworkUrl60} />\r\n       </div>\r\n       <div class=\"card-content\">\r\n           <span class=\"card-title activator grey-text text-darken-4\">{song.trackCensoredName}</span>\r\n           <p>{song.artistName}</p>\r\n       </div>\r\n       <div class=\"card-reveal\">\r\n           <span class=\"card-title grey-text text-darken-4\">Information<i class=\"material-icons right\">close</i></span>\r\n           <p><b>Price:</b>{song.collectionPrice}$</p>\r\n           <p><b>Annaninfo:</b>exempel</p>\r\n           <p><b>Annaninfo:</b>exempel</p>\r\n           <a class=\"waves-effect waves-light btn-small\">Add to playlist</a>\r\n   </div>\r\n </div>\r\n  </div>\r\n       )\r\n       }  \r\n     \r\n    </div>)}\r\n     \r\n     \r\n    export default SongSearcher","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js",["45"],"import React, { useState } from 'react'\nimport SongSearcher from '../Views/searchView'\n \nfunction Search (){\n \n    const [song, setSong] = useState(\"ozuna\");\n    const [result, setResult] = useState ({resultCount: 0, results: []});\n \n   //  const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=jack+johnson';\n \n    const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=' + song;\n \n    React.useEffect(()=>fetch(url).then(response => response.json()).then(setResult),[song]);\n \n \n   \n   return <SongSearcher searchSong={setSong} theSongs={result}/>\n}\n \nexport default Search\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js",["46","47"],"import './App.css';\r\nimport React from \"react\"\r\nimport Playlist from \"./Playlistview\"\r\n class Playlisten extends React.Component {\r\n\r\n  state = {\r\n    counters : [\r\n  \r\n    ]}\r\n\r\n    btnHandler = () => {\r\n      let a = this.state.counters\r\n      let l채ngd = this.state.counters.length+1\r\n      a.push({id : this.state.counters[this.state.counters.length-1], text : \"Playlist \" + l채ngd, idNamn : \"testar2\"+l채ngd})\r\n      this.setState({counters : a})\r\n      console.log(this.state.counters.id)\r\n\r\n    }\r\n\r\n    deleteAll = () =>{\r\n        let a = this.state.counters.filter(element => element.id <= 0)\r\n        this.setState({counters : a})\r\n    }\r\n\r\n   removeBtn = (counterId)  => {\r\n     \r\n\r\n     let a = this.state.counters.filter(element => element.id != counterId)\r\n    \r\n     this.setState({counters : a})\r\n\r\n     console.log(counterId, \"TEST\")\r\n     console.log(this.state.counters)\r\n   }\r\n\r\n\r\n  render(){\r\n\r\n    let tom = \"\"\r\n    let knapp = \"\"\r\n    if(this.state.counters.length == 0){\r\n      tom = <div className = \"water\"></div>\r\n      knapp = \"\"\r\n    }\r\n    else{\r\n      tom = \"\"\r\n      knapp = <button className = \"buttonAdd\" onClick = {() => this.deleteAll()}><span>Delete all</span></button>\r\n    }\r\n \r\n    let a = this.state.counters.map(element =>(\r\n       <Playlist text = {element.text} \r\n       idNamn = {element.idNamn}\r\n       id = {element.id}\r\n        onDelete = {this.removeBtn}\r\n        onCopy = {this.copyBtn}/>))\r\n  return (\r\n    <div className = \"backgroundf채rg\">\r\n      <button className = \"buttonAdd\" onClick = {() => this.btnHandler()}><span>Add new playlist</span></button>\r\n      <br></br>\r\n      <br></br>\r\n         {a}\r\n         <br></br>\r\n         {tom}\r\n         <br></br>\r\n        {knapp}\r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Playlisten;\r\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js",["48"],"\r\nimport React from \"react\"\r\nimport \"./App.css\"\r\n\r\n class Playlist extends React.Component {\r\n\r\n    state = {\r\n        songs : 0,\r\n        idNamn : this.props.idNamn,\r\n        allSongs : [],\r\n     \r\n    }\r\n\r\n  btnHandler = () => console.log(\"CLICKED\")\r\n\r\n  btnHandlerSong = () => {\r\n  \r\n    this.setState({songs : this.state.songs+1})\r\n    var inputVal = document.getElementById(this.state.idNamn).value;\r\n    console.log(inputVal)\r\n    let t = this.state.allSongs\r\n\r\n    if(!t.includes(inputVal)){\r\n    t.push(inputVal)\r\n    }\r\n \r\n    else{\r\n        alert(\"Cant add!  \" + inputVal + \" allready in playlist\")\r\n    }\r\n    this.setState({allSongs : t})\r\n  }\r\n\r\n  test = (id) => {\r\n        console.log(id)\r\n  }\r\n\r\n  render(){\r\n    \r\n    let str = \"https://www.youtube.com/results?search_query=\"\r\n  let v = this.state.allSongs.map((element) => <div className = \"boxsquaresmall\">\r\n  \r\n  <span className = \"spanSize\"><small><a href = {str + element} target=\"_blank\">{element}</a> </small>\r\n  </span></div>\r\n\r\n  )\r\n  return (\r\n    <div className = \"boxsquare\">\r\n      <h2>{this.props.text}</h2>\r\n      <input type = \"button\" className = \"myButton\"  value = \"ADD SONG\" onClick = {() => this.btnHandlerSong()} />\r\n      <div className  = \"divider\"/>\r\n\r\n      <input type=\"text\" id={this.state.idNamn} placeholder=\"Enter song name\"/>\r\n            {v}\r\n            <input type = \"button\" value = \"DELETE PLAYLIST\" id = {this.state.songs} className = \"myButton2\" onClick = {() => this.props.onDelete(this.props.id)}/>\r\n            <br></br>\r\n            <h4>total songs: {this.state.allSongs.length}</h4>\r\n            <h4>total playtime: 0</h4>\r\n            <h4>total cost : 0</h4>\r\n    </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js",["49"],{"ruleId":"50","severity":1,"message":"51","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":20},{"ruleId":"50","severity":1,"message":"54","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":17},{"ruleId":"50","severity":1,"message":"55","line":10,"column":8,"nodeType":"52","messageId":"53","endLine":10,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":16,"column":7,"nodeType":"58","endLine":16,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":18,"column":13,"nodeType":"58","endLine":18,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":18,"column":8,"nodeType":"58","endLine":18,"endColumn":57},{"ruleId":"56","severity":1,"message":"61","line":29,"column":12,"nodeType":"58","endLine":29,"endColumn":58},{"ruleId":"62","severity":1,"message":"63","line":13,"column":86,"nodeType":"64","endLine":13,"endColumn":92,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":28,"column":63,"nodeType":"68","messageId":"69","endLine":28,"endColumn":65},{"ruleId":"66","severity":1,"message":"70","line":41,"column":35,"nodeType":"68","messageId":"69","endLine":41,"endColumn":37},{"ruleId":"71","severity":1,"message":"72","line":42,"column":65,"nodeType":"73","endLine":42,"endColumn":80},{"ruleId":"50","severity":1,"message":"74","line":4,"column":12,"nodeType":"52","messageId":"53","endLine":4,"endColumn":17},"no-unused-vars","'DefaultRoute' is defined but never used.","Identifier","unusedVar","'searchNav' is assigned a value but never used.","'playlistNav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["75"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'route' is assigned a value but never used.",{"desc":"76","fix":"77"},"Update the dependencies array to be: [song, url]",{"range":"78","text":"79"},[531,537],"[song, url]"]