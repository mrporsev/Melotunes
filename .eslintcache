[{"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js":"1","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js":"2","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js":"3","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js":"4","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js":"5","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js":"6","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js":"7","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js":"8","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\defaultRoute.js":"9","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\atunesModel.js":"10"},{"size":1042,"mtime":1607569081443,"results":"11","hashOfConfig":"12"},{"size":1384,"mtime":1606844661006,"results":"13","hashOfConfig":"12"},{"size":146,"mtime":1606833778000,"results":"14","hashOfConfig":"12"},{"size":2113,"mtime":1607572528147,"results":"15","hashOfConfig":"12"},{"size":832,"mtime":1607572204782,"results":"16","hashOfConfig":"12"},{"size":4222,"mtime":1607536464778,"results":"17","hashOfConfig":"12"},{"size":1792,"mtime":1607542835527,"results":"18","hashOfConfig":"12"},{"size":564,"mtime":1607104359689,"results":"19","hashOfConfig":"12"},{"size":215,"mtime":1607027716184,"results":"20","hashOfConfig":"12"},{"size":867,"mtime":1607536959893,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1c76izv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\App.js",["49","50","51","52"],"import React from 'react'\nimport './App.css';\nimport Search from './Components/search'\nimport Playlisten from \"./Playlisten\"\nimport Show from './show'\nimport atunesModel from './atunesModel'\n\nfunction App() {\n const searchNav=()=>window.location.hash=\"search\";\n const playlistNav=()=>window.location.hash=\"playlist\";\nconst model = new atunesModel()\n\n return (\n   <div className=\"App\">\n     <nav>\n    <div className=\"nav-wrapper grey\">\n      <center><a href=\"#\" className=\"brand-logo\">Atunes</a></center>\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        <li><a href=\"#\">Homepage</a></li>\n        <li><a href=\"#search\">Search</a></li>\n        <li><a href=\"#playlist\">Playlist</a><span class=\"new badge\" data-badge-caption=\"new songs\">4</span></li>\n      </ul>\n    </div>\n  </nav>\n      <div>\n       <Show hash=\"#search\"><Search atunesModel= {model}/> </Show>\n      </div>\n       <div>\n       <Show hash=\"#playlist\"><Playlisten atunesModel = {model} /> </Show>\n       </div>\n       \n   </div>\n );\n}\n \nexport default App;","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\components\\search.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\index.js",[],["53","54"],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Views\\searchView.js",["55","56"],"\r\nconst SongSearcher = ({searchSong, theSongs, addSong})=>{\r\n        \r\n    let query = \" \";\r\n    let x = \"\"\r\n    if(theSongs.resultCount === 0) {\r\n        x = alert(\"Result not found, please try again.\") \r\n        theSongs.resultCount = 1 \r\n    }\r\n    \r\n     \r\n    return (<div>\r\n     \r\n      \r\n       <input className = \"input\" placeholder = \"Song or Artist\" onChange={event=> query = event.target.value}></input>\r\n       <button className = \"deep-purple lighten-1 waves-effect waves-purple btn-small\" onClick = {()=> searchSong(query)}> Search</button>\r\n           \r\n        <br></br>\r\n       \r\n       {theSongs.results.map(song =>\r\n       <div class=\"pics\">\r\n       <div class=\"card medium\">\r\n       <div class=\"card-image waves-effect waves-block waves-light\">\r\n       <img class=\"activator\" src={song.artworkUrl100} /> \r\n       </div>\r\n       <div class=\"card-content\">\r\n           <span class=\"card-title activator black-text text-darken-4\">{song.trackCensoredName}</span>\r\n           <p>{song.artistName}</p>\r\n       </div>\r\n       <div class=\"card-reveal black\">\r\n           <span class=\"card-title white-text text-darken-4\"><i class=\"material-icons right\">X</i></span>\r\n           <p class=\"white-text text-darken-4\"><b>Price:</b>{song.trackPrice}$</p>\r\n           <p class=\"white-text text-darken-4\"><b>Genre:</b>{song.primaryGenreName}</p>\r\n           <p class=\"white-text text-darken-4\"><b>Country:</b>{song.country}</p>\r\n           <p class=\"white-text text-darken-4\"><b>Released:</b>{song.releaseDate}</p>\r\n           <p class=\"white-text text-darken-4\"><b>Collection:</b>{song.collectionName}</p>\r\n           <p class=\"white-text text-darken-4\"><b>Length:</b> {((song.trackTimeMillis/1000)/60).toFixed(2)} min</p>\r\n       <button class=\"waves-effect waves-light btn-small\" style={{fontSize: \"10px\"}} onClick={()=>addSong(song)}>Add to playlist</button>\r\n       <iframe src={song.previewUrl} \r\nwidth=\"120px\" height=\"120\" border=\"0\" frameborder=\"0\"  scrolling=\"no\"></iframe>\r\n   </div>\r\n </div>\r\n \r\n  </div>\r\n       )\r\n       }  \r\n     {x}\r\n    </div>)}\r\n     \r\n     \r\n    export default SongSearcher","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Components\\search.js",["57"],"import React, { useState } from 'react'\nimport SongSearcher from '../Views/searchView'\n \nfunction Search ({atunesModel}){\n    \n    \n\n    const [song, setSong] = useState(\"drake\");\n    const [result, setResult] = useState ({resultCount: 1, results: []});\n \n   //  const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=jack+johnson';\n \n    const url = 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com/search?term=' + song + \"&limit=16\";\n \n    React.useEffect(()=>fetch(url).then(response => response.json()).then(setResult),[song]);\n    React.useEffect(()=> console.log(atunesModel.playlist),[atunesModel.playlist])\n\n    console.log(result)\n\n\n   return <SongSearcher searchSong={setSong} theSongs={result} addSong={(song)=>atunesModel.addSongToPlaylist(song)} />\n}\n \nexport default Search\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlisten.js",["58","59","60","61","62","63","64"],"import './App.css';\r\nimport React from \"react\"\r\nimport Playlist from \"./Playlistview\"\r\nimport song from \"./songs/backgroundsong.mp3\"\r\nimport atunesModel from \"./atunesModel\"\r\n class Playlisten extends React.Component {\r\n\r\n  state = {\r\n    counters : [\r\n     \r\n    ],\r\n    allSongs : [\"hej\"],\r\n    songsFromsearch : [],\r\n    songnamn : new Audio(song)}\r\n\r\n    btnHandler = () => {\r\n      if(this.state.counters.length>=1){\r\n        this.kanske()\r\n        console.log(this.props.allSongs)\r\n      }\r\n      else{\r\n      let a = this.state.counters\r\n      let längd = this.state.counters.length+1\r\n      a.push({id : this.state.counters[this.state.counters.length-1], text : \"Playlist \" + längd, idNamn : \"testar2\"+längd})\r\n      this.setState({counters : a})\r\n      console.log(this.props.allSongs)\r\n      }\r\n\r\n    }\r\n\r\n    deleteAll = () =>{\r\n      var ms = prompt(\"Are you sure you want to delete? Please enter ´´yes`` and press ok otherwise press ´´avbryt``\")\r\n      if(ms == \"yes\"){\r\n        let a = this.state.counters.filter(element => element.id <= 0)\r\n        this.setState({counters : a}) \r\n        console.log(\"paused\")\r\n        this.setState({allSongs : []})\r\n      }\r\n        else{\r\n        \r\n        }\r\n    }\r\n\r\n    pausa(){\r\n      this.state.songnamn.pause()\r\n      this.state.songnamn.currentTime = 0;\r\n      console.log(\"PAUSAD\")\r\n    }\r\n\r\n   removeBtn = (counterId)  => {\r\n     \r\n\r\n     let a = this.state.counters.filter(element => element.id != counterId)\r\n    \r\n     this.setState({counters : a})\r\n\r\n     console.log(counterId, \"TEST\")\r\n     console.log(this.state.counters)\r\n     this.setState({allSongs : []})\r\n   }\r\n\r\n   testar = () =>{\r\n    var inputVal = document.getElementById(\"testar\").value;\r\n\r\n    let v = this.state.allSongs\r\n    v.push(inputVal)\r\n    this.setState({allSongs :v})\r\n    console.log(inputVal)\r\n    console.log(this.state.allSongs)\r\n   }\r\n\r\n  kanske(){\r\n\r\n\r\n  this.inget()\r\n  let a = this.state.counters\r\n  let längd = this.state.counters.length+1\r\n  a.push({id : this.state.counters[this.state.counters.length-1], text : \"Playlist \" + längd, idNamn : \"testar2\"+längd})\r\n  this.setState({counters : a})\r\n\r\n  }\r\n\r\n  inget(){\r\n    this.setState({allSongs : []})\r\n  }\r\n\r\n  playSong(){\r\n    console.log(\"TET\")\r\n    this.state.volume = 1.0\r\n    this.state.songnamn.play()\r\n    \r\n  \r\n  }\r\n\r\n  halfVolume(){\r\n\r\n    this.state.songnamn.volume = 0.2\r\n\r\n  }\r\n\r\n  fullVolume(){\r\n    this.state.songnamn.volume = 1.0\r\n    \r\n  }\r\n\r\n  render(){\r\n\r\n    console.log(this.state.allSongs)\r\n\r\n    let tom = \"\"\r\n    let knapp = \"\"\r\n    \r\n    if(this.state.counters.length == 0){\r\n      tom = <div className = \"water\"></div>\r\n      knapp =  <div>  <input type=\"text\" id={\"testar\"} placeholder=\"Enter song name\"/>\r\n      <input type = \"button\" value = \"Add song to playlist\" onClick = {() => this.testar()}/>\r\n    </div>\r\n    }\r\n    else{\r\n      tom = \"\"\r\n      knapp = <div><button className = \"buttonAdd\" onClick = {() => this.deleteAll()}><span>Delete all</span></button>\r\n      <br></br>\r\n   </div>\r\n      \r\n    }\r\n    \r\n    let a = this.state.counters.map(element =>(\r\n       <Playlist text = {element.text} \r\n       idNamn = {element.idNamn}\r\n       id = {element.id}\r\n        onDelete = {this.removeBtn}\r\n        onCopy = {this.copyBtn}\r\n        allSongs = {this.state.allSongs}/>))\r\n\r\n    \r\n      if(2 == 1){\r\n\r\n      }\r\n    \r\n      console.log(<atunesModel/>)\r\n  return (\r\n   \r\n    <div className = \"backgroundfärg\">\r\n      \r\n      <button className = \"buttonAdd\" onClick = {() => this.btnHandler()}><span>Add new playlist</span></button>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n         {a}\r\n         <br></br>\r\n         {tom}\r\n         <br></br>\r\n     \r\n        {knapp}\r\n        <br></br>\r\n        <br></br>\r\n       \r\n        <input type = \"button\" value = \"Play background song\" onClick = {() => this.playSong()}/>\r\n       <input type = \"button\" value = \"Mute background song\" onClick = {() => this.pausa()}/>\r\n       <input type = \"button\" value = \"lower the volume\" onClick = {() => this.halfVolume()}/>\r\n       <input type = \"button\" value = \"Higher the volume\" onClick = {() => this.fullVolume()}/>\r\n       \r\n    </div>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Playlisten;\r\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\Playlistview.js",["65"],"\r\nimport React from \"react\"\r\nimport \"./App.css\"\r\nimport atunesModel from \"../src/atunesModel\"\r\n\r\n class Playlist extends React.Component {\r\n\r\n  \r\n    state = {\r\n        songs : 0,\r\n        idNamn : this.props.idNamn,\r\n        allSongs : this.props.allSongs\r\n     \r\n    }\r\n  \r\n  \r\n  btnHandler = () => console.log(\"CLICKED\")\r\n\r\n  btnHandlerSong = () => {\r\n  \r\n    this.setState({songs : this.state.songs+1})\r\n    var inputVal = document.getElementById(this.state.idNamn).value;\r\n    console.log(inputVal)\r\n    let t = this.state.allSongs\r\n\r\n    if(!t.includes(inputVal)){\r\n    t.push(inputVal)\r\n    }\r\n \r\n    else{\r\n        alert(\"Cant add!  \" + inputVal + \" allready in playlist\")\r\n    }\r\n    this.setState({allSongs : t})\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    \r\n    let str = \"https://www.youtube.com/results?search_query=\"\r\n  let v = this.state.allSongs.map((element) => <div className = \"boxsquaresmall\">\r\n  \r\n  <span className = \"spanSize\"><small><a href = {str + element} target=\"_blank\">{element}</a> </small>\r\n  </span></div>\r\n\r\n  )\r\n  return (\r\n    <div className = \"boxsquare\">\r\n      <h2>{this.props.text}</h2>\r\n      <input type = \"button\" className = \"myButton\"  value = \"ADD SONG\" onClick = {() => this.btnHandlerSong()} />\r\n      <div className  = \"divider\"/>\r\n\r\n      <input type=\"text\" id={this.state.idNamn} placeholder=\"Enter song name\"/>\r\n            {v} console.log({atunesModel.convertedTime})\r\n            <input type = \"button\" value = \"DELETE PLAYLIST\" id = {this.state.songs} className = \"myButton2\" onClick = {() => this.props.onDelete(this.props.id)}/>\r\n            <br></br>\r\n            <h4>total songs: {this.state.allSongs.length}</h4>\r\n            <h4>total playtime: 0</h4>\r\n            <h4>total cost : 0</h4>\r\n    </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\show.js",["66"],"import React from 'react';\r\nimport DefaultRoute from './defaultRoute'\r\nfunction Show({hash, children}){  \r\n    const [route, setRoute]= React.useState(window.location.hash);\r\n    <DefaultRoute/> \r\n    React.useEffect(()=>{ \r\n      window.addEventListener(\"hashchange\", \r\n                 setRoute) \r\n             return ()=> window.removeEventListener(\"hashchange\", \r\n              setRoute);\r\n                },[]);\r\n                             \r\n          \r\n               \r\n\r\n\r\n   return hash===window.location.hash?children: false;\r\n }\r\n\r\n export default Show","C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\defaultRoute.js",[],"C:\\Users\\porse\\OneDrive\\Skrivbord\\projekt13\\src\\atunesModel.js",[],{"ruleId":"67","severity":1,"message":"68","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"67","severity":1,"message":"71","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":17,"column":15,"nodeType":"74","endLine":17,"endColumn":50},{"ruleId":"72","severity":1,"message":"73","line":19,"column":13,"nodeType":"74","endLine":19,"endColumn":25},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":24,"column":8,"nodeType":"74","endLine":24,"endColumn":58},{"ruleId":"81","severity":1,"message":"82","line":39,"column":8,"nodeType":"74","endLine":40,"endColumn":71},{"ruleId":"83","severity":1,"message":"84","line":15,"column":86,"nodeType":"85","endLine":15,"endColumn":92,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":33,"column":13,"nodeType":"89","messageId":"90","endLine":33,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":46,"column":7,"nodeType":"93","endLine":46,"endColumn":26},{"ruleId":"87","severity":1,"message":"94","line":53,"column":63,"nodeType":"89","messageId":"90","endLine":53,"endColumn":65},{"ruleId":"91","severity":1,"message":"92","line":89,"column":5,"nodeType":"93","endLine":89,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":97,"column":5,"nodeType":"93","endLine":97,"endColumn":24},{"ruleId":"91","severity":1,"message":"92","line":102,"column":5,"nodeType":"93","endLine":102,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":113,"column":35,"nodeType":"89","messageId":"90","endLine":113,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":43,"column":65,"nodeType":"97","endLine":43,"endColumn":80},{"ruleId":"67","severity":1,"message":"98","line":4,"column":12,"nodeType":"69","messageId":"70","endLine":4,"endColumn":17},"no-unused-vars","'searchNav' is assigned a value but never used.","Identifier","unusedVar","'playlistNav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'route' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [song, url]",{"range":"104","text":"105"},[567,573],"[song, url]"]